Ниспадающий список --- select
=============================

Определение
-----------

С помощью компонента можно создавать ниспадающие списки с ручным вводом значений.

Тип компонента в конфигураторе: **select**.

Внешний вид
-----------

JSON-схема для компонента в конфигураторе:

..  code-block:: json

    "objectType": {
                    "type": "select",
                    "title": "Выберите тип объекта",
                    "enum": [ "Жилой комплекс", "Спортивные сооружения", "Служебные помещения" ]
    }

Раскрытый список в пользовательском приложении:

..  thumbnail:: images/select-screen-1.png
    :alt: Пример компонента
    :align: center

Свойства
--------

..  code-block:: json

    {
        "type": "select",
        "title": "...",
        "enum": [ "..." ],
        "hidden": false,
        "helperText": "..."
    }

..  list-table::
    :widths: 10 80 10
    :header-rows: 1

    *   - Свойство
        - Определение
        - Тип данных
    *   - ``type``
        - Тип элемента. Для ниспадающего списка — это всегда ``select``.
        - **string**
    *   - ``title``
        - Название поля, отображаемое в форме. Формат: ``string``.
        - **string**
    *   - ``enum``
        - Список доступных значений. Если значений больше одного, они вписываются в квадратных скобках --- ``[]``.
        - **string**
    *   - ``hidden``
        - Это стандартное свойство для всех компонентов.
          При установке значения ``true`` для этого свойства, компонент будет скрыт из формы.
          Это свойство помогает выстраивать логику для работы с полями.
          То есть с помощью хуков есть возможность изменить значение этого свойства в определённых ситуациях.
          Либо использовать данные из этого поля в других местах, но так, чтобы конечный пользователь не видел этого.
        - **boolean**
    *   - ``helperText``
        - Описание поля. Это стандартное свойство и отображается как текст под полем компонента.
        - **string**

Модель данных
-------------

Данные сохраняются в ``FormInstances`` в поле ``Data`` в виде JSON.

Выбранное значение списка в пользовательском приложении:

..  thumbnail:: images/select-screen-2.png
    :alt: Пример компонента 
    :align: center

После сохранения данные попадают в ``FromInstances`` в конфигураторе:

..  code-block:: json

    {
        "objectType": "Жилой комплекс"
    }

Примеры использования
---------------------

В примере ниже присутствует ``helperText``, который отобразится под компонентом.

..  code-block:: json

    "organization": {
          "enum": [
            "ООО Строим вместе",
            "ИП Петров",
            "ООО Рога и копыта"
          ],
          "type": "select",
          "title": "Выберите организацию",
          "helperText": "Выбранная организация отобразиться в сформированной документации"
        }
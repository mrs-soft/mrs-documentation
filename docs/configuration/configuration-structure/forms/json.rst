Структура Схемы данных
======================

Для создания форм и работы с остальными элементами системы вы должны знать и понимать формат **JSON**.

..  note:: JSON — текстовый формат обмена данными, основанный на JavaScript.
            Как и многие другие текстовые форматы, JSON легко читается людьми.

Шаблон схемы данных
-------------------

Ниже представлен основной шаблон JSON-схемы для форм со всеми присущими атрибутами.
Порядок атрибутов может быть любым.

..  code-block:: json
    
    "scheme": {
        "title": "Hello World Form",
        "required": [ "FIELDNAME" ],
        "order": [ "FIELDNAME" ],
        "dependencies": {
            "FIELDNAME_0": "[OTHER_FIELDNAMES]"
            }
        "properties": [
           { 
            "type": "FIELDTYPE",
            "name": "FIELDNAME"
            "..."
           }
         ]
    }

..  list-table::
    :widths: 20 80
    :header-rows: 1

    *   - Наименование поля
        - Определение
    *   - ``title``
        - заголовок формы.
    *   - ``required``
        - список полей, обязательных к заполнению.
    *   - ``order``
        - порядок следования полей в форме. Можно указывать не все поля, в таком случае оставшиеся могут отобразиться в случайном порядке.
    *   - ``dependencies``
        - список полей, зависящих друг от друга. Если заполнено поле ``FIELDNAME_0``, то поля ``OTHER_FIELDNAMES`` тоже должны быть заполнены.
    *   - ``properties``
        - список полей формы.
    *   - ``type``
        - поле, в котором указывается тип поля.
    *   - ``name``
        - поле, в котором пользователь указывает название поля. Повторяющихся название в одной ``scheme`` быть не должно.

Основным атрибутом формы является ``properties`` и всё, что внутри него находится.
Все остальные атрибуты можно не добавлять, если такой необходимости нет.

Но форма не будет работать, если не добавить в ``properties`` хотя бы один компонент формы.
Подробнее о компонентах в разделе :doc:`/configuration/components`.

Пример формы
------------

Эта форма начинается с атрибутов, в которых:

*   задаётся название --- ``title``,
*   порядок отображения компонентов --- ``order``,
*   список обязательных компонентов --- ``required``.

..  literalinclude:: _includes/hello-world-form.json
    :language: json
    :lines: 2-8
    :dedent: 4

Далее в ``properties`` прописываются компоненты с необходимыми атрибутами:

..  literalinclude:: _includes/hello-world-form.json
    :language: json
    :lines: 10-36
    :dedent: 4

В клиентском приложении эта форма будет выглядеть следующим образом:

..  thumbnail:: images/forms-json-1.png
    :alt: Форма в конфигураторе
    :align: center

----

Подробнее о компонентах, которые использовались в этой форме:

#.  :doc:`/configuration/components/text`
#.  :doc:`/configuration/components/date`
#.  :doc:`/configuration/components/object`
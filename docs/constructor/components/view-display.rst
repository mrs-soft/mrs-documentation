Отображение представления --- viewDisplay
=========================================

Определение
-----------

Компонент используется для отображения представлений в форме.

Тип компонента в конфигураторе: **viewDisplay**.

Внешний вид
-----------

JSON-схема для создания компонента в конфигураторе:

..  code-block:: json

    "testViewDisplay": {
        "type": "viewDisplay",
        "title": "Отметки на [List] Custom form with params with reports",
        "fields": ["id","title"],
        "viewId": "627cd801a5608901a8000433",
        "variables": {"pickerId": ""}
    }

Как оно выглядит в пользовательском приложении:

..  thumbnail:: images/view-1-overview.png
    :alt: Пример компонента
    :width: 70%

Выбор формы на основе прописанного представления:

..  thumbnail:: images/view-2-choosing.png
    :alt: Пример компонента
    :width: 70%

Свойства
--------

..  code-block:: json

    "type": "view",
    "title": "Название компонента",
    "description": "Описание",
    "viewId": "...",
    "canCreate": true,
    "multiple": true,
    "variables": [
        {
          [ "..." ]
        }
      ],
    "hidden": false
    }   

..  list-table::
    :widths: 20 70 10
    :header-rows: 1

    *   - Свойство
        - Определение
        - Тип данных
    *   - ``type``
        - Тип элемента. Для этого компонента --- это всегда ``view``.
        - **string**
    *   - ``title``
        - Название компонента, которое отображается в форме.
        - **string**
    *   - ``description``
        - Описание компонента, которое отображается в окне выбора значений.
        - **string**
    *   - ``viewId``
        - ID представления, которую нужно отображать в списке.
        - **string**
    *   - ``сanCreate``
        - При установке значения ``true`` для этого свойства, компонент будет скрыт из формы. Это свойство помогает выстраивать логику для работы с полями.
          То есть с помощью хуков есть возможность изменить значение этого свойства в определённых ситуациях.
        - **boolean**
    *   - ``extensions``
        - Свойство отвечает за ограничение форматов файлов, которые компонент может загрузить в систему.
          Если вы не укажите никаких форматов, то компонент не даст загрузить вообще никакой файл.
        - **string**
    *   - ``hidden``
        - При установке значения ``true`` для этого свойства, компонент будет скрыт из формы. Это свойство помогает выстраивать логику для работы с полями.
          То есть с помощью хуков есть возможность изменить значение этого свойства в определённых ситуациях.
        - **boolean**

Модель данных
-------------

Данные сохраняются в ``FormInstances`` в поле ``Data`` в виде JSON.

Заполненная форма в пользовательском приложении:

..  thumbnail:: images/dictionary-3-model.png
    :alt: Пример компонента
    :width: 70%

После сохранения данные попадают в ``FromInstances`` в конфигураторе. Они сохраняются также в JSON формате:

..  code-block:: json

    "documents": [
    {
        "id": "63e3378f00209b40be79aa99",
        "url": "documents/b2c7cc4f-76fc-4bbc-a0be-97c433752e25/Invoice-01.2022.pdf",
        "name": "Invoice-01.2022.pdf",
        "size": 21024,
        "type": "document",
        "status": "UPLOADED",
        "createdDate": 1675835279502,
        "originalFileName": "Invoice-01.2022.pdf"
    }
    ]

В ``FormInstances`` попадают все данные о документе.

Примеры использования
---------------------

В системе предусмотрена возможность передавать значения некоторых свойств с помощью хуков.
Также у свойств есть определённые значения по умолчанию, которые позволяют опускать эти свойства.

Поэтому в примере ниже мы можем опустить почти все свойства компонента.

..  code-block:: json

    "supDocs": {
          "type": "attachments",
          "title": "Сопроводительная документация *"
        }

Вот так этот компонент будет выглядеть у пользователя:

..  thumbnail:: images/attachments-4-example.png
    :alt: Пример компонента
    :width: 70%
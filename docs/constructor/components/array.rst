Выбор из множества значений --- array
=====================================

Определение
-----------

С помощью компонента можно создавать список, который наполняется значениями либо из справочников, либо вручную.
С этим компонентом можно использовать ``user``, который даёт возможность выбирать пользователей из базы данных.

Тип компонента в конфигураторе: **array**.

Внешний вид
-----------

JSON-схема для компонента с выбором пользователей заданных вручную в конфигураторе:

..  code-block:: json
    
    "HandArray": {
            "title": "Сотрудники",
            "description": "Начните вводить имя сотрудника",
            "type": "array",
            "minItems": 2,
            "maxItems": 4,
            "items": {
                "enum": [0, 1, 2, 3, 4],
                "enumNames": ["Иванов", "Петров", "Сидоров", "Андреев", "Михайлов"]
            }
    }

Список с выбором пользователей заданных вручную в пользовательском приложении:

..  thumbnail:: images/array-screen-3.png
    :alt: Пример компонента
    :align: center

Свойства
--------

С использованием компонента ``user``:

..  code-block:: json
    
    "UserArray": {
            "title": "Сотрудники",
            "description": "Начните вводить имя сотрудника",
            "type": "array",
            "minItems": 2,
            "maxItems": 4,
            "items": {
                "type": "user"
            }
    }

С ручным вводом данных:

..  code-block:: json

    "HandArray": {
            "title": "Сотрудники",
            "description": "Начните вводить имя сотрудника",
            "type": "array",
            "minItems": 2,
            "maxItems": 4,
            "items": {
                "enum": [0, 1, 2, 3, 4],
                "enumNames": ["Иванов", "Петров", "Сидоров", "Андреев", "Михайлов"]
            }
    }

..  list-table::
    :widths: 20 80
    :header-rows: 1

    *   - Свойство
        - Определение
    *   - ``UserArray`` и ``HandArray``
        - Это ``FIELDNAME``. Задаются программистом, то есть вместо них можно поставить любое подходящее наименование.
    *   - ``title``
        - Заголовок компонента, отображаемый в форме. Формат: ``string``.
    *   - ``description``
        - Описание поля. Отображается под заголовком. Формат: ``string``.
    *   - ``type``
        - Тип элемента. Для списка с выбором из множества значений — это всегда ``array``.
    *   - ``minItems``
        - Минимальное количество выбранных элементов для того, чтобы заполненная форма считалась корректной. Формат: ``number``.
    *   - ``maxItems``
        - Максимальное количество выбранных элементов для того, чтобы заполненная форма считалась корректной. Формат: ``number``.
    *   - ``type``
        - Это свойство используется только вместе с компонентом ``user`` и нужно для создания списков с пользователями из базы данных.
          Если вы используете этот аттрибут, то нижние вы использовать не сможете.
    *   - ``items``
        - С помощью атрибута задаётся список значений, в котором прописываются ``enum`` и ``enumNames``.
    *   - ``enum``
        - Числовой список доступных значений.
          Если значений больше одного, они вписываются в квадратных скобках --- ``[]`` Формат: ``number``.
    *   - ``enumNames``
        - Список отображающихся наименований для значений из поля ``enum``.
          Если значений больше одного, они вписываются в квадратных скобках --- ``[]`` Формат: ``string``.

Модель данных
-------------

Данные сохраняются в ``FormInstances`` в конфигураторе.

Выбранные значения списка в пользовательском приложении:

С ручным вводом:

..  thumbnail:: images/array-screen-5.png
    :alt: Пример компонента 
    :align: center

После сохранения данные попадают в ``FromInstances`` в конфигураторе. Они сохраняются также в JSON формате:

С ручным вводом:

..  code-block:: json

    "HandArray": [
            3,
            1
    ]

..  note:: В ``FromInstances`` идут значения из ``enum``, а не наименования из ``enumNames``.

С компонентом ``user``:

..  thumbnail:: images/array-screen-4.png
    :alt: Пример компонента 
    :align: center

С компонентом ``user``:

..  code-block:: json

    "UserArray": [
            "60febbbc04d27d7b83d93c43",
            "5fdb50697ce63c231e6f8052"
    ]

При использовании компонента ``user``, в ``FormInstances`` попадают идентификаторы выбранных пользователей из базы данных.

Комментарии
-----------

Если задать компонент без вводных данных, то он изначально отобразится в форме только с заголовком и описанием.
Нажатием на кнопку |Add Item| можно добавить новый элемент в список.

..  |Add Item| image:: images/array-screen-add-item.png

..  thumbnail:: images/array-screen-1.png
    :alt: Пример компонента
    :align: center

Примеры использования
---------------------

JSON-схема для компонента с выбором пользователей из "СтройКонтроля" в конфигураторе:

..  code-block:: json
    
    "UserArray": {
            "title": "Сотрудники",
            "description": "Начните вводить имя сотрудника",
            "type": "array",
            "minItems": 2,
            "maxItems": 4,
            "items": {
                "type": "user"
            }
    }

Список с выбором пользователей из базы данных "СтройКонтроля" в пользовательском приложении:

..  thumbnail:: images/array-screen-2.png
    :alt: Пример компонента
    :align: center
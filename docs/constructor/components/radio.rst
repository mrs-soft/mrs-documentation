Список c единичным выбором
==========================

С помощью компонента можно создавать список c единичным выбором.

Как задать компонент формы?
---------------------------

.. code-block:: json
    
    "productivity": {
        "type": "radio",
        "title": "Выберите самого продуктивного сотрудника за день",
        "enum": [0, 1, 2, 3],
        "enumNames": ["Гаранин", "Максимов", "Байков", "Миронов"]
    }

#.  ``productivity`` --- это ``FIELDNAME``. Задётся пользователем и необходимо для объявления любого компонента.
#.  ``type`` --- тип элемента. Для списка с единичным выбором — это всегда ``radio``.
#.  ``title`` --- название поля, отображаемое в форме. Формат: ``string``.    
#.  ``enum`` --- числовой список доступных значений.
    Если значений больше одного, они вписываются в квадратных скобках --- ``[]``.
    Формат: может быть ``number`` или ``string``. В текстовом формате верхний пример будет выглядеть так:
        
    .. code-block:: json
        
        "enum": ["one", "two", "three", "four"]

#.  ``enumNames`` --- список отображающихся наименований для значений из поля ``enum``.
    Если значений больше одного, они вписываются в квадратных скобках --- ``[]``. Формат: ``string``.

Пример
------

JSON-схема для компонента в конфигураторе:

.. code-block:: json
    
    "productivity": {
        "type": "checkboxes",
        "title": "Выберите самых продуктивных сотрудников за день:",
        "enum": [0, 1, 2, 3],
        "enumNames": ["Гаранин", "Максимов", "Байков", "Миронов"]
    }

Список с единичным выбором в пользовательском приложении:

.. image:: images/radio-screen-1.png
    :alt: Пример компонента
    :align: center

Как сохраняются данные?
-----------------------

Данные сохраняются в ``FormInstances`` в конфигураторе.

Выбранное значение списка в пользовательском приложении:

.. image:: images/radio-screen-2.png
    :alt: Пример компонента 
    :align: center

После сохранения данные попадают в ``FromInstances`` в конфигураторе. Они сохраняются также в JSON формате:

.. code-block:: json

    {
        "productivity": "2"
    }

Стоит обратить внимание, что в ``FromInstances`` идут значения из ``enum``, а не наименования из ``enumNames``.
Соответственно, если ввести в ``enum`` текстовое значение, то в ``FromInstances`` они сохранятся в следующем виде:

.. code-block:: json

    {
      "productivity": "three"
    }
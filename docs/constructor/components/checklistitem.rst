Пункт чеклиста --- checklistItem
================================

Определение
-----------

С помощью компонента можно создавать большие чеклисты с вопросами и тремя возможными ответами по типу: `Принято, Не принято, Пропустить`.

Тип компонента в конфигураторе: **checklistItem**.

Внешний вид
-----------

JSON-схема для компонента в конфигураторе:

..  code-block:: json
    
    "quality-check": {
                    "type": "checklistItem",
                    "title": "Устраивает ли вас качество ремонта?",
                    "enum": ["accept", "decline", "skip"],
                    "enumNames": ["Да", "Нет", "Есть допустимые замечания"]
    }

Развёрнутый пункт чеклиста в пользовательском приложении:

..  thumbnail:: images/checklistitem-screen-1.png
    :alt: Пример компонента
    :align: center


Как задать компонент формы?
---------------------------

..  code-block:: json
    
    "questionOne": {
                    "type": "checklistItem",
                    "title": "Наличие штукатурки на стенах и ее качество",
                    "enum": ["accept", "decline", "skip"],
                    "enumNames": ["Принято", "Не принято", "Пропустить"]
    }

..  list-table::
    :widths: 20 80
    :header-rows: 1

    *   - Свойство
        - Определение
    *   - ``questionOne``
        - Это ``FIELDNAME``. Задаётся программистом. Вместо ``questionOne`` можно поставить любое подходящее наименование.
    *   - ``type``
        - Тип элемента. Для пункта чеклиста — это всегда ``checklistItem``.
    *   - ``title``
        - Название поля, отображаемое в форме. Формат: ``string``.
    *   - ``enum``
        - Текстовый список доступных значений.
          Так как значений больше одного, они вписываются в квадратных скобках --- ``[]``. Формат: ``string``.
    *   - ``enumNames``
        - Список отображающихся наименований для значений из поля ``enum``. Он может отличаться от показанного в примере выше.
          Так как значений больше одного, они вписываются в квадратных скобках --- ``[]``. Формат: ``string``.

Модель данных
-------------

Данные сохраняются в ``FormInstances`` в конфигураторе.

Выбранное значение списка в пользовательском приложении:

..  thumbnail:: images/checklistitem-screen-2.png
    :alt: Пример компонента 
    :align: center

После сохранения данные попадают в ``FromInstances`` в конфигураторе. Они сохраняются также в JSON формате:

..  code-block:: json

    {
        "quality-check": "skip"
    }

Стоит обратить внимание, что в ``FromInstances`` идут значения из ``enum``, а не наименования из ``enumNames``.

Комментарии
-----------

Примеры использования
---------------------
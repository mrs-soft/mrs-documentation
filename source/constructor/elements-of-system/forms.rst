Формы
=====

Формат описания формы
---------------------

..  code-block:: json
    
    {
        "id*": "string (uuid?)",
        "title": "string",
        "properties*": {
            "FIELDNAME": {
                "type": "text | number | date | datetime | checkboxes | radio | email | textarea | user | checkbox | array | attachments | object",
                "title": "string",
                "description": "string",
                "enum": "string[]",
                "enumNames": "string[]",
                "minItems": "number",
                "maxItems": "number",
                "minLength": "number",
                "maxLength": "number",
                "items":  {
                    "enum": "string[]",
                    "enumNames": "string[]",
                    "type": "text | date | datetime | checkboxes | radio | email | textarea | user | checkbox | attachments"
                },
            }
        },
        "required": "[ FIELDNAMES ]",
        "order": "[ FIELDNAMES ]",
        "dependencies": {
            "FIELDNAME_0": "[OTHER_FIELDNAMES]"
            }
    }

``id`` --- поле, необходимое для идентификации схемы формы.

``title`` --- заголовок формы.

``properties`` --- список полей формы:

*   ``FIELDNAME`` --- название поля, которое задается пользователем.
    
    *   ``type`` --- тип поля --- не указывается, если заполнено поле ``enum``.
        Должно быть одним из списка :ref:`типов полей схемы <types>`.
    *   ``title`` --- название поля, отображаемое в форме.
    *   ``description`` --- описание поля. Отображается как заглушка поля в форме. Подходит для полей:

        *   ``text``,
        *   ``textarea``,
        *   ``date``,
        *   ``datetime``,
        *   ``email``,
        *   ``user``,
        *   ``select``.

    *   ``default`` --- значение поля по умолчанию. На данный момент только для ``status``. 
    *   ``enum`` --- список доступных значений.
        Можно использовать с типами ``text`` (выпадающий список), ``radio``.
        При ``enum`` для поля ``FIELDNAME`` осуществляется выбор одного варианта. 
    *   ``enumNames`` --- список меток для значений из поля ``enum``, отображающихся в форме.
    *   ``minItems`` --- значение для поля типа ``array``.
        Минимальное количество выбранных элементов для того, чтобы заполненная форма считалась корректной
    *   ``maxItems`` --- значение для поля типа ``array``.
        Максимальное количество выбранных элементов для того, чтобы заполненная форма считалась корректной
    *   ``minLength`` --- значение для поля типа ``text``, ``textarea``.
        Минимальное количество символов в поле для того, чтобы заполненная форма считалась корректной
    *   ``maxLength`` --- значение для поля типа ``text``, ``textarea``.
        Максимальное количество символов в поле для того, чтобы заполненная форма считалась корректной
    *   ``items`` --- указывается для типа ``array``, ``checkboxes``.
        При заполнении поля ``items.enum`` --- множественный выбор из доступных значений.
        Иначе --- возможность добавлять элементы заданного типа.

        *   ``enum`` --- список доступных значений. По аналогии с ``enum`` для ``FIELDNAME``.
        *   ``enumNames`` --- список меток для значений из поля ``enum``, отображающихся в форме.
            По аналогии с ``enumNames`` для ``FIELDNAME``
        *   ``type`` --- то же, что и для ``FIELDNAME.type``, за исключением поля ``array``

``required`` --- список полей, обязательных к заполнению

``order`` --- порядок следования полей в форме.
Можно указывать не все поля, в таком случае оставшиеся отобразятся в порядке, указанном в схеме

``dependencies`` --- список зависимых полей.
Если заполнено поле ``FIELDNAME_0``, то поля ``OTHER_FIELDNAMES`` тоже должны быть заполнены.